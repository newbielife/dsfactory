<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ds.factory.datasource.mappers.ClientMapper" >

   <resultMap id="BaseResultMap" type="com.ds.factory.datasource.entities.Client" >
       <id column="Client_no" jdbcType="VARCHAR" property="Client_no" />
       <result column="Client_name" jdbcType="VARCHAR" property="Client_name" />
       <result column="Password" jdbcType="VARCHAR" property="Password" />
       <result column="Client_type" jdbcType="VARCHAR" property="Client_type" />
       <result column="Credit" jdbcType="BIGINT" property="Credit" />
       <result column="Details" jdbcType="VARCHAR" property="Details" />
    </resultMap>


    <select id="exist_or_not"  resultType="java.lang.Integer">
         SELECT count(*) FROM Client WHERE Client_no = #{Client_no} and flag=0
    </select>




    <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    </sql>


    <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    </sql>


    <sql id="Base_Column_List">
        Client_no,      Client_name,        Password,       Client_type,        Credit,     Details
    </sql>


   <select id="orderBy_Credit" resultMap="BaseResultMap">
        select *
        from Client
        where  flag=0
        order by Credit desc
   </select>

   <select id="orderBy_Client_type" resultMap="BaseResultMap">
      select *
      from Client
      where  flag=0
      order by Client_type desc
   </select>


    <select id="selectBy_partName_or_partNo" resultMap="BaseResultMap">
        select *
        from Client
        where Client_no like '%${part1}%' or Client_name like '%${part2}%'  and flag=0
    </select>


   <select id="selectByExample" parameterType="com.ds.factory.dao.Example.ClientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Client
    where flag=0
    <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
        order by ${orderByClause}
    </if>
  </select>




    <select id="countByExample" parameterType="com.ds.factory.dao.Example.ClientExample" resultType="java.lang.Integer">
      select count(*) from Client where  and flag=0
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
    </select>


    <select id="countBy_Name_and_Password" resultType="java.lang.Integer">
        select count(*)
        from Client
        where Client_name = #{Client_name,jdbcType=VARCHAR} and Password = #{Password,jdbcType=VARCHAR} and flag=0
    </select>

    <select id="selectBy_Name_and_Password" resultMap="BaseResultMap">
        select *
        from Client
        where Client_name = #{Client_name,jdbcType=VARCHAR} and Password = #{Password,jdbcType=VARCHAR} and flag=0
    </select>

    <select id="select_Biggest_Client_no"  resultType="java.lang.String">
        select Client_no
        from Client
        where  flag=0
        order by Client_no desc
        limit 1
    </select>


   <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Client
    where Client_no = #{Client_no,jdbcType=VARCHAR} and flag=0
  </select>






    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from Client
        where Client_no = #{Client_no,jdbcType=VARCHAR} and flag=0
    </delete>


    <delete id="deleteByExample" parameterType="com.ds.factory.dao.Example.ClientExample">
        delete from Client
        <if test="_parameter != null">
          <include refid="Example_Where_Clause" />
        </if>
    </delete>







    <insert id="insert" parameterType="com.ds.factory.datasource.entities.Client">
        insert
        into Client (Client_no,     Client_name,    Password,   Client_type,    Credit,     Details)
        values (#{Client_no,jdbcType=VARCHAR},      #{Client_name,jdbcType=VARCHAR},    #{Password,jdbcType=VARCHAR},
                #{Client_type,jdbcType=VARCHAR},    #{Credit,jdbcType=BIGINT},          #{Details,jdbcType=VARCHAR})
      </insert>


      <insert id="insertSelective" parameterType="com.ds.factory.datasource.entities.Client">
        insert into Client
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="Client_no != null">
            Client_no,
          </if>
          <if test="Client_name != null">
            Client_name,
          </if>
          <if test="Password != null">
            Password,
          </if>
          <if test="Client_type != null">
            Client_type,
          </if>
          <if test="Credit != null">
            Credit,
          </if>
          <if test="Details != null">
            Details,
          </if>
        </trim>

        <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="Client_no != null">
            #{Client_no,jdbcType=VARCHAR},
          </if>
          <if test="Client_name != null">
            #{Client_name,jdbcType=VARCHAR},
          </if>
          <if test="Password != null">
            #{Password,jdbcType=VARCHAR},
          </if>
          <if test="Client_type != null">
            #{Client_type,jdbcType=VARCHAR},
          </if>
          <if test="Credit != null">
            #{Credit,jdbcType=BIGINT},
          </if>
          <if test="Details != null">
            #{Details,jdbcType=VARCHAR},
          </if>
        </trim>

      </insert>




   <update id="updateByExampleSelective" parameterType="map">
    update Client
    <set>
      <if test="record.Client_no != null">
        Client_no = #{record.Client_no,jdbcType=VARCHAR},
      </if>
      <if test="record.Client_name != null">
        Client_name = #{record.Client_name,jdbcType=VARCHAR},
      </if>
      <if test="record.Password != null">
        Password = #{record.Password,jdbcType=VARCHAR},
      </if>
      <if test="record.Client_type != null">
        Client_type = #{record.Client_type,jdbcType=VARCHAR},
      </if>
      <if test="record.Credit != null">
        Credit = #{record.Credit,jdbcType=BIGINT},
      </if>
      <if test="record.Details != null">
        Details = #{record.Details,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <update id="updateByExample" parameterType="map">
    update Client
    set Client_no = #{record.Client_no,jdbcType=VARCHAR},
        Client_name = #{record.Client_name,jdbcType=VARCHAR},
        Password = #{record.Password,jdbcType=VARCHAR},
        Client_type = #{record.Client_type,jdbcType=VARCHAR},
        Credit = #{record.Credit,jdbcType=BIGINT},
        Details = #{record.Details,jdbcType=VARCHAR}

    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <update id="updateByPrimaryKeySelective" parameterType="com.ds.factory.datasource.entities.Client">
    update Client
    <set>
      <if test="Client_no != null">
        Client_no = #{Client_no,jdbcType=VARCHAR},
      </if>
      <if test="Client_name != null">
        Client_name = #{Client_name,jdbcType=VARCHAR},
      </if>
      <if test="Password != null">
        Password = #{Password,jdbcType=VARCHAR},
      </if>
      <if test="Client_type != null">
        Client_type = #{Client_type,jdbcType=VARCHAR},
      </if>
      <if test="Credit != null">
        Credit = #{Credit,jdbcType=BIGINT},
      </if>
      <if test="Details != null">
        Details = #{Details,jdbcType=VARCHAR},
      </if>
    </set>
    where Client_no = #{Client_no,jdbcType=VARCHAR}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.ds.factory.datasource.entities.Client">
    update Client
    set Client_name = #{record.Client_name,jdbcType=VARCHAR},
        Password = #{record.Password,jdbcType=VARCHAR},
        Client_type = #{record.Client_type,jdbcType=VARCHAR},
        Credit = #{record.Credit,jdbcType=BIGINT},
        Details = #{record.Details,jdbcType=VARCHAR}
    where Client_no = #{record.Client_no,jdbcType=VARCHAR}
  </update>


</mapper>
